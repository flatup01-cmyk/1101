/**
 * AIKA18Âè∑„ÅÆ„ÉÑ„É≥„Éá„É¨„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥Âà∂Âæ°
 * „Éâ„É©„Ç¥„É≥„Éú„Éº„É´18Âè∑È¢®„ÅÆË°®ÊÉÖË±ä„Åã„Å™ÂèçÂøú„ÇíÂÆüË£Ö
 */

/**
 * „Çπ„Ç≥„Ç¢„Åã„ÇâAIKA18Âè∑„ÅÆÂèçÂøú„Çø„Ç§„Éó„ÇíÂà§ÂÆö
 * @param {Object} scores - Ëß£Êûê„Çπ„Ç≥„Ç¢
 * @returns {string} - 'good', 'bad', 'average'
 */
export function getAikaReactionType(scores) {
  if (!scores) return 'average'
  
  const { punch_speed = 0, guard_stability = 0, kick_height = 0, core_rotation = 0 } = scores
  
  // Âπ≥Âùá„Çπ„Ç≥„Ç¢„ÇíË®àÁÆó
  const avgScore = (punch_speed + guard_stability + kick_height + core_rotation) / 4
  
  // „Çπ„Ç≥„Ç¢Âà§ÂÆö
  if (avgScore >= 70) return 'good'      // ËâØ„ÅÑ„Çπ„Ç≥„Ç¢
  if (avgScore < 40) return 'bad'       // ÊÇ™„ÅÑ„Çπ„Ç≥„Ç¢
  return 'average'                       // ÊôÆÈÄö„ÅÆ„Çπ„Ç≥„Ç¢
}

/**
 * „Çπ„Ç≥„Ç¢„Å´Âøú„Åò„ÅüAIKA18Âè∑„ÅÆ„Çª„É™„Éï„ÇíÂèñÂæó
 * @param {string} reactionType - ÂèçÂøú„Çø„Ç§„Éó
 * @param {Object} scores - Ëß£Êûê„Çπ„Ç≥„Ç¢
 * @returns {Object} - { message, animationClass, emotion }
 */
export function getAikaReaction(reactionType, scores = {}) {
  const reactions = {
    good: {
      message: "‚Ä¶Âà•„Å´„ÄÅÊÇ™„Åè„ÅØ„Å™„ÅÑ„Çì„Åò„ÇÉ„Å™„ÅÑÔºü„Åæ„ÅÅ„ÄÅ„Åì„ÅÆ„Åè„Çâ„ÅÑ„Åß„Åç„Å¶ÂΩì„Åü„ÇäÂâç„Å†„Åë„Å©„Å≠„ÄÇ‚Ä¶ÂãòÈÅï„ÅÑ„Åó„Å™„ÅÑ„Åß„Çà„Å≠ÔºÅ",
      animationClass: 'aika-blush',
      emotion: 'ÁÖß„Çå',
      color: '#ff6b9d',
      borderColor: 'rgba(255, 107, 157, 0.5)'
    },
    bad: {
      message: "„ÅØ„ÅÅÔºÅÔºü‰Ωï„ÇÑ„Å£„Å¶„Çì„ÅÆ„Ç¢„É≥„ÇøÔºÅ„Åì„Çì„Å™„Çì„Åò„ÇÉË©±„Å´„Å™„Çâ„Å™„ÅÑ„Çè„ÇàÔºÅ„ÇÇ„Å£„Å®ÁúüÈù¢ÁõÆ„Å´„ÇÑ„Çä„Å™„Åï„ÅÑÔºÅ„Åì„ÅÆ„Éê„Ç´„ÉÅ„É≥„ÅåÔºÅ",
      animationClass: 'aika-angry',
      emotion: 'ÊÄí„Çä',
      color: '#ff4444',
      borderColor: 'rgba(255, 68, 68, 0.5)'
    },
    average: {
      message: "‚Ä¶„Åæ„ÅÇ„ÄÅÊôÆÈÄö„Å≠„ÄÇ„Åæ„Å†„Åæ„Å†È†ëÂºµ„Çä„Å™„Åï„ÅÑ„ÄÇÊúüÂæÖ„Åó„Å¶„ÅÇ„Åí„Çã„Çè„Çà„ÄÇ‚Ä¶Âà•„Å´„ÄÅÊúüÂæÖ„Åó„Å¶„Çã„Çè„Åë„Åò„ÇÉ„Å™„ÅÑ„Åë„Å©„Å≠„ÄÇ",
      animationClass: '',
      emotion: 'ÂÜ∑Èùô',
      color: '#64c8ff',
      borderColor: 'rgba(100, 200, 255, 0.5)'
    },
    cute: {
      message: "‚Ä¶„Å™„ÄÅ‰ΩïË®Ä„Å£„Å¶„Çì„ÅÆ„Çà‚Ä¶Âà•„Å´„ÄÅÂèØÊÑõ„Åè„Å™„Çì„Åã„Å™„ÅÑ„Åó‚Ä¶",
      animationClass: 'aika-shy',
      emotion: 'ÁÖß„Çå',
      color: '#ff9f9f',
      borderColor: 'rgba(255, 159, 159, 0.5)'
    }
  }
  
  return reactions[reactionType] || reactions.average
}

/**
 * AIKA18Âè∑„ÅÆÂèçÂøú„ÇíË°®Á§∫Ôºà„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥‰ªò„ÅçÔºâ
 * @param {HTMLElement} container - Ë°®Á§∫„Åô„Çã„Ç≥„É≥„ÉÜ„Éä
 * @param {Object} scores - Ëß£Êûê„Çπ„Ç≥„Ç¢
 * @param {string} customReaction - „Ç´„Çπ„Çø„É†ÂèçÂøú„Çø„Ç§„ÉóÔºà„Ç™„Éó„Ç∑„Éß„É≥Ôºâ
 */
export function displayAikaReaction(container, scores = null, customReaction = null) {
  const reactionType = customReaction || (scores ? getAikaReactionType(scores) : 'average')
  const reaction = getAikaReaction(reactionType, scores)
  
  // „Çπ„Ç≥„Ç¢Ë°®Á§∫„ÅÆÁîüÊàê
  let scoreDisplay = ''
  if (scores) {
    const avgScore = Math.round((scores.punch_speed + scores.guard_stability + scores.kick_height + scores.core_rotation) / 4)
    scoreDisplay = `
      <div class="score-display" style="margin-bottom: 15px; padding: 12px; background: rgba(0, 0, 0, 0.3); border-radius: 6px; border: 1px solid ${reaction.borderColor}; font-family: 'Courier New', monospace;">
        <div style="font-size: 0.75rem; color: ${reaction.color}; margin-bottom: 5px; text-align: left;">
          ‚ñ∏ ANALYSIS COMPLETE
        </div>
        <div style="font-size: 1.2rem; color: ${reaction.color}; font-weight: bold; text-align: center; margin: 10px 0;">
          POWER LEVEL: ${avgScore}
        </div>
        <div style="font-size: 0.7rem; color: #aaa; text-align: left; margin-top: 8px;">
          ‚ñ∏ Punch: ${scores.punch_speed?.toFixed(1) || '0'} | Guard: ${scores.guard_stability?.toFixed(1) || '0'}<br>
          ‚ñ∏ Kick: ${scores.kick_height?.toFixed(1) || '0'} | Rotation: ${scores.core_rotation?.toFixed(1) || '0'}
        </div>
      </div>
    `
  }
  
  const html = `
    <div class="aika-message ${reaction.animationClass}" style="padding: 20px; background: rgba(0, 0, 0, 0.4); border-radius: 10px; border: 2px solid ${reaction.borderColor}; font-family: 'Courier New', monospace; position: relative;">
      ${scoreDisplay}
      <div style="font-size: 0.75rem; color: ${reaction.color}; margin-bottom: 10px; text-align: left;">
        ‚ñ∏ EMOTION: ${reaction.emotion.toUpperCase()}
      </div>
      <div style="font-size: 0.95rem; color: #fff; line-height: 1.8; margin-top: 15px; padding-top: 15px; border-top: 1px solid ${reaction.borderColor};">
        "${reaction.message}"
      </div>
      ${reaction.animationClass === 'aika-blush' ? '<div style="position: absolute; top: 10px; right: 10px; font-size: 1.2rem;">üòä</div>' : ''}
      ${reaction.animationClass === 'aika-angry' ? '<div style="position: absolute; top: 10px; right: 10px; font-size: 1.2rem;">üí¢</div>' : ''}
      ${reaction.animationClass === 'aika-shy' ? '<div style="position: absolute; top: 10px; right: 10px; font-size: 1.2rem;">ü•∫</div>' : ''}
    </div>
  `
  
  container.innerHTML = html
}

/**
 * AIKAÁîªÂÉè„Å´„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥„ÇØ„É©„Çπ„ÇíÈÅ©Áî®
 * @param {string} animationClass - „Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥„ÇØ„É©„ÇπÂêç
 * @param {number} duration - „Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥Á∂ôÁ∂öÊôÇÈñìÔºàmsÔºâ
 */
export function applyAikaImageAnimation(animationClass, duration = 3000) {
  const aikaImage = document.querySelector('.aika-image')
  if (!aikaImage) return
  
  // Êó¢Â≠ò„ÅÆ„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥„ÇØ„É©„Çπ„ÇíÂâäÈô§
  aikaImage.classList.remove('aika-blush', 'aika-angry', 'aika-shy')
  
  // Êñ∞„Åó„ÅÑ„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥„ÇØ„É©„Çπ„ÇíËøΩÂä†
  if (animationClass) {
    aikaImage.classList.add(animationClass)
    
    // ÊåáÂÆöÊôÇÈñìÂæå„Å´„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥„ÇíËß£Èô§
    if (duration > 0) {
      setTimeout(() => {
        aikaImage.classList.remove(animationClass)
      }, duration)
    }
  }
}

/**
 * „Çπ„Ç≥„Ç¢ÁµêÊûúË°®Á§∫„Ç®„É™„Ç¢„Çí‰ΩúÊàê
 */
export function createScoreDisplayArea() {
  const container = document.querySelector('.status')
  if (!container) return null
  
  const scoreArea = document.createElement('div')
  scoreArea.id = 'aika-score-display'
  scoreArea.style.cssText = 'margin-top: 2rem; display: none;'
  container.appendChild(scoreArea)
  
  return scoreArea
}


